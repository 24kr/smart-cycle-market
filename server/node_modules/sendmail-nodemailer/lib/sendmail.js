
var nodemailer = require('nodemailer');

var sendemail = function (vs){
    return new Promise(function(resolve, reject){
        if(!vs.service){
            reject({
                    error: 1,
                    msg: "邮件服务器不存在!"
                });
        };
        if(!vs.port){
            reject({
                    error: 1,
                    msg: "邮件服务器端口不存在!"
                });
        };
        if(!vs.sendmailbox||!vs.sendmailboxpass){
            reject({
                    error: 1,
                    msg: "邮件发送端邮箱或密码不存在!"
                });
        };
        if(!vs.getemailbox){
            reject({
                    error: 1,
                    msg: "邮件接受端邮箱不存在!"
                });
        };

        var transporter = nodemailer.createTransport({
            service: vs.service,                 //服务端
            secureConnection: vs.secure || false,                //默认安全链接 // true for 465, false for other ports
            port: vs.port || 587,                               //默认端口
            auth: {
                user: vs.sendmailbox ,                          //本地邮箱
                pass: vs.sendmailboxpass                        //邮箱密码
            }
        });
        transporter.verify(function(error, success) {
            if (error) {
                    console.log(error);
            } else {
                console.log('Server is ready to take our messages');
            }
        });
        var mailOptions = {
                from: vs.sendmailbox,                            // 发送者
                to: vs.getemailbox,                             // 接受者,可以同时发送多个,以逗号隔开
                subject: vs.subject ||'xxx账号--邮箱验证'         // 标题
                // cc         : ''  //抄送
                // bcc      : ''    //密送
                //attachments :[]   //附件
        };
        if(vs.mailtext){
            var mailcontent=vs.mailtext;
            mailOptions.text=mailcontent;
        }else if(vs.mailhtml){
            var mailcontent=vs.mailhtml;
            mailOptions.html=mailcontent;
        }else{
            mailOptions.text="";
        };
        if(vs.attachments){
            var attachments = JSON.parse(vs.attachments);
            if(attachments.length>0){
                mailOptions.attachments=attachments;
            }else{
                mailOptions.attachments=[];
            }
        };
        transporter.sendMail(mailOptions, function (err, info) {
            if (err) {
                reject({
                    error: 1,
                    msg: "邮件发送失败"
                });
            };
            console.log('发送成功');
            resolve({
                error: 0,
                msg: "邮件发送成功"
            });

        });

    });
}


module.exports = sendemail;